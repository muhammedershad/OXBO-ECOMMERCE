<%- include('../partials/header.ejs') %>


<div class="container-fluid my-3 row m-0 p-0 d-flex justify-content-center">
    <% if (user.wishlist.length === 0) { %>
        <div class="card text-center">
            <div class="card-body">
                <h5 class="card-title">Your wishlist is currently empty</h5>
                <p class="card-text">Browse our products and start adding items to your wishlist.</p>
                <a href="/" class="btn ">Shop Now</a>
            </div>
        </div>
    <% } else { %>
        <% user.wishlist.forEach((product,index) => { %>
            <div class="card col-md-3 col-6 mx-2 mb-2" style="width: 18rem;">
                <a href="/product?productId=<%= product._id %>" style="height: 100%;">
                    <img src="/<%= product.image[0] %>" class="card-img-top" alt="Product Image">
                    <div class="card-body">
                        <h5 class="card-title"><%= product.title %></h5>
                        <h6 class="card-subtitle mb-2 text-muted">Rs. <%= product.MRP %></h6>
                    </div>
                </a>
                <div class="card-footer d-flex justify-content-between align-items-end">
                    <button onclick='selectSize("<%= product._id %>","<%= product.stock %>","<%= index %>")' class="btn">Add to Cart</button>
                    <button onclick="removeFromCart('<%= product._id %>','<%= index %>')" class="btn">Remove</button>
                </div>
            </div> 
        <% }) %>
    <% } %>
</div>


<script>

async function selectSize(productId, stock, index) {
  console.log(productId, stock);
  console.log(typeof stock);

  const keyValuePairs = stock
    .slice(1, -1) // Remove the curly braces
    .split(',')
    .map(pair => pair.trim()); // Remove leading/trailing whitespaces

  console.log(keyValuePairs);
  const stockObject = {};

  keyValuePairs.forEach(pair => {
    const [key, value] = pair.split(':').map(item => item.trim());
    stockObject[key] = parseInt(value);
  });

  console.log(stockObject);

  const sizeMapping = {};

  for (const size in stockObject) {
    if (typeof stockObject[size] === 'number' && stockObject[size] > 0) {
      sizeMapping[size] = size;
    }
  }


  const inputOptions = new Promise((resolve) => {
    setTimeout(() => {
      resolve(sizeMapping)
    }, 1000)
  })

  const { value: size } = await Swal.fire({
    title: 'Select size',
    input: 'radio',
    inputOptions: inputOptions,
    inputValidator: (value) => {
      if (!value) {
        return 'You need to choose something!'
      }
    }
  })

  if (size) {
    Swal.fire({ html: `You selected: ${size}`})
    

    const response = await fetch(`/addToCart?productId=${productId}&size=${size}`, {
            method: 'POST',
            body: JSON.stringify({ size })
            });

            if (response.ok) {
            const responseData = await response.json();

            if (responseData.success) {
                Swal.fire({
                text: 'Product added to the cart',
                target: '#custom-target',
                customClass: {
                    container: 'position-absolute'
                },
                toast: true,
                position: 'top-right',
                timer: 2000, // Close the toast after 2 seconds
                showConfirmButton: false // Hide the "OK" button
                });

                const response = await fetch(`/removeFromWishlist/${productId}/${index}`,{
                    method : 'DELETE',
                })
                window.location.reload()
            } else {
                // Handle the case where success is not true in the response, if needed.
                console.log('Product not added to the cart');
            }
            } else {
            // Handle the case where the fetch request itself was not successful, if needed.
            console.error('Failed to add product to the cart');
            }
  }
}



    
</script>

<script src="/javascripts/wishlist.js"></script>

<%- include('../partials/footer.ejs') %>